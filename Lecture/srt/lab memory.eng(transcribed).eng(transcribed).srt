1
00:00:01,800 --> 00:00:05,520
okay now for lab memory uh we have four

2
00:00:05,520 --> 00:00:09,360
different files that we may may or may

3
00:00:09,360 --> 00:00:11,280
not have to

4
00:00:11,280 --> 00:00:13,599
edit and and then we also have some

5
00:00:13,599 --> 00:00:17,560
other files in the project that that you

6
00:00:17,560 --> 00:00:22,640
you probably want to want to look at but

7
00:00:22,640 --> 00:00:25,560
um let's let's start

8
00:00:25,560 --> 00:00:29,439
by compiling and and running uh and

9
00:00:29,439 --> 00:00:31,359
seeing

10
00:00:31,359 --> 00:00:33,680
uh where that gets us

11
00:00:33,680 --> 00:00:36,559
so if we front this

12
00:00:36,559 --> 00:00:39,440
then then it's like okay this looks

13
00:00:39,440 --> 00:00:43,239
pretty bad

14
00:00:43,239 --> 00:00:46,800
um so then let's

15
00:00:46,800 --> 00:00:53,559
run with as and and look uh what kind of

16
00:00:53,559 --> 00:00:58,039
problems are we actually getting

17
00:00:58,920 --> 00:01:01,440
here so

18
00:01:01,440 --> 00:01:03,799
requested allocation

19
00:01:03,799 --> 00:01:08,520
size exceeds maximum supported size uh

20
00:01:08,520 --> 00:01:11,200
so let's see what's going on

21
00:01:11,200 --> 00:01:13,520
allocator

22
00:01:13,520 --> 00:01:15,680
uh

23
00:01:15,680 --> 00:01:18,560
58 seems to be doing

24
00:01:18,560 --> 00:01:21,400
something something

25
00:01:21,400 --> 00:01:24,799
wrong so it's it's pointing to this that

26
00:01:24,799 --> 00:01:26,920
that something is going wrong

27
00:01:26,920 --> 00:01:31,159
here exceeds maximum supported size so

28
00:01:31,159 --> 00:01:34,680
so then I suppose PR count must be some

29
00:01:34,680 --> 00:01:38,600
incredibly high value

30
00:01:38,600 --> 00:01:41,560
now the thing that's going on here is

31
00:01:41,560 --> 00:01:43,280
that

32
00:01:43,280 --> 00:01:46,119
um if you look around you'll see that

33
00:01:46,119 --> 00:01:48,439
room count is not actually getting

34
00:01:48,439 --> 00:01:50,360
initialized

35
00:01:50,360 --> 00:01:55,680
anywhere it's it's part of the uh uh

36
00:01:55,680 --> 00:01:57,719
allocator uh

37
00:01:57,719 --> 00:02:00,399
class but nothing is actually ini izing

38
00:02:00,399 --> 00:02:02,520
it right now so that means that this is

39
00:02:02,520 --> 00:02:05,399
some kind of undefined

40
00:02:05,399 --> 00:02:08,560
value now it's very likely that it's

41
00:02:08,560 --> 00:02:09,679
going to be

42
00:02:09,679 --> 00:02:13,400
zero but also in this case it seems like

43
00:02:13,400 --> 00:02:17,040
it's some incredibly high value instead

44
00:02:17,040 --> 00:02:21,959
but uh either way the problem is that

45
00:02:21,959 --> 00:02:24,519
it's undefined and we need to Define it

46
00:02:24,519 --> 00:02:26,319
somehow

47
00:02:26,319 --> 00:02:29,000
um so then we can see that we're using

48
00:02:29,000 --> 00:02:30,360
this file

49
00:02:30,360 --> 00:02:33,319
class some kind of static function in

50
00:02:33,319 --> 00:02:35,000
that in that

51
00:02:35,000 --> 00:02:37,680
class uh well

52
00:02:37,680 --> 00:02:40,360
actually rather than a class it's more

53
00:02:40,360 --> 00:02:43,680
like just a name space where where we uh

54
00:02:43,680 --> 00:02:46,519
Define some

55
00:02:46,519 --> 00:02:48,760
functions okay so we're using the load

56
00:02:48,760 --> 00:02:51,080
rooms but of course this doesn't do

57
00:02:51,080 --> 00:02:55,319
anything to actually it doesn't return

58
00:02:55,319 --> 00:02:57,599
anything but in order to get the number

59
00:02:57,599 --> 00:02:59,319
of rooms well we'll see that there is

60
00:02:59,319 --> 00:03:02,080
actually a function for that so so let's

61
00:03:02,080 --> 00:03:04,480
just uh grab this we don't really need

62
00:03:04,480 --> 00:03:06,840
to worry about the implementation well

63
00:03:06,840 --> 00:03:09,519
we'll see from the header file that

64
00:03:09,519 --> 00:03:14,200
that's what the function does and uh

65
00:03:14,200 --> 00:03:16,159
we'll just grab that from there we we

66
00:03:16,159 --> 00:03:19,280
can trust that this is

67
00:03:19,480 --> 00:03:24,518
a a well defined uh

68
00:03:25,599 --> 00:03:28,680
function okay so so we get the room

69
00:03:28,680 --> 00:03:32,920
count now so this part should be

70
00:03:32,920 --> 00:03:37,000
fine uh oh of course it's part of the

71
00:03:37,000 --> 00:03:41,120
file IO name

72
00:03:42,480 --> 00:03:46,319
space there okay now we run into

73
00:03:46,319 --> 00:03:50,720
something else aloc d aloc

74
00:03:50,720 --> 00:03:55,159
mismatch operator new brackets versus

75
00:03:55,159 --> 00:04:00,439
operator delete so so that implies that

76
00:04:00,439 --> 00:04:04,720
uh we are allocating like an array and

77
00:04:04,720 --> 00:04:07,760
then by the time we're deleting it uh we

78
00:04:07,760 --> 00:04:11,680
don't see it as an array anymore or I

79
00:04:11,680 --> 00:04:14,560
should say the program doesn't see it

80
00:04:14,560 --> 00:04:15,639
that

81
00:04:15,639 --> 00:04:18,639
way uh so we can see that we run into

82
00:04:18,639 --> 00:04:21,798
this error in the in the clear function

83
00:04:21,798 --> 00:04:23,919
well that makes sense like because it

84
00:04:23,919 --> 00:04:26,800
was about the point where we are trying

85
00:04:26,800 --> 00:04:30,280
to delete it that it it's not working

86
00:04:30,280 --> 00:04:32,680
as it should but that doesn't really

87
00:04:32,680 --> 00:04:37,680
help us find the issue like why why was

88
00:04:37,680 --> 00:04:39,639
it not correct there instead we should

89
00:04:39,639 --> 00:04:42,520
look here where it says where that

90
00:04:42,520 --> 00:04:43,960
memory was

91
00:04:43,960 --> 00:04:45,840
allocated uh

92
00:04:45,840 --> 00:04:48,360
room

93
00:04:48,360 --> 00:04:50,000
19

94
00:04:50,000 --> 00:04:54,240
uh okay so so it's saying that it's it's

95
00:04:54,240 --> 00:04:58,280
creating these these letters

96
00:04:58,280 --> 00:05:01,639
well okay so so then if we also check

97
00:05:01,639 --> 00:05:05,160
room uh 86 yeah yeah we see

98
00:05:05,160 --> 00:05:08,240
that this is about deleting those

99
00:05:08,240 --> 00:05:11,240
letters

100
00:05:11,360 --> 00:05:15,080
um now actually actually in this case in

101
00:05:15,080 --> 00:05:18,600
this case it was good to look at the

102
00:05:18,600 --> 00:05:22,479
delete because it actually was uh oh not

103
00:05:22,479 --> 00:05:25,440
that way this way the time this issue

104
00:05:25,440 --> 00:05:29,960
was actually here uh so okay uh but now

105
00:05:29,960 --> 00:05:31,960
that's

106
00:05:31,960 --> 00:05:34,280
sorted but of course it was good to look

107
00:05:34,280 --> 00:05:36,639
at the allocation as well so we have a

108
00:05:36,639 --> 00:05:40,080
full picture of what's going on um okay

109
00:05:40,080 --> 00:05:43,560
so what next so we still have an issue

110
00:05:43,560 --> 00:05:44,360
with

111
00:05:44,360 --> 00:05:47,800
the point when we're trying to delete

112
00:05:47,800 --> 00:05:50,600
keep buffer

113
00:05:50,960 --> 00:05:53,960
overflow

114
00:05:55,759 --> 00:05:58,639
uh so

115
00:05:58,639 --> 00:06:01,639
then

116
00:06:02,120 --> 00:06:03,479
that then there's something else that's

117
00:06:03,479 --> 00:06:05,240
that's going wrong here so so this is

118
00:06:05,240 --> 00:06:07,680
actually more more so the situation that

119
00:06:07,680 --> 00:06:11,120
that I explained earlier where uh it's

120
00:06:11,120 --> 00:06:13,520
like what it's trying to delete doesn't

121
00:06:13,520 --> 00:06:15,319
really match what it was what it was

122
00:06:15,319 --> 00:06:17,919
created and that's why that's why it's

123
00:06:17,919 --> 00:06:21,720
crashing here uh okay so now yeah I was

124
00:06:21,720 --> 00:06:23,599
a little ahead of myself so now let's

125
00:06:23,599 --> 00:06:27,960
look at the so so allocator

126
00:06:27,960 --> 00:06:31,120
59 kind of okay okay that's where we

127
00:06:31,120 --> 00:06:32,840
create these

128
00:06:32,840 --> 00:06:35,360
rooms

129
00:06:35,360 --> 00:06:39,319
um okay okay what else can

130
00:06:39,479 --> 00:06:43,000
we find

131
00:06:47,800 --> 00:06:50,800
here

132
00:06:50,800 --> 00:06:54,599
um okay okay in this

133
00:06:55,479 --> 00:06:58,680
case in in this case we can really

134
00:06:58,680 --> 00:07:01,919
directly from here it's it's it's not

135
00:07:01,919 --> 00:07:03,800
really showing

136
00:07:03,800 --> 00:07:07,199
us quite where where the problem

137
00:07:07,199 --> 00:07:09,639
is so we can see that that when we're

138
00:07:09,639 --> 00:07:11,400
trying to delete like like something's

139
00:07:11,400 --> 00:07:14,840
going wrong we're allocating the memory

140
00:07:14,840 --> 00:07:16,879
here and by the time we're deleting it

141
00:07:16,879 --> 00:07:19,199
something's going wrong so so somewhere

142
00:07:19,199 --> 00:07:21,479
in between things are going wrong that

143
00:07:21,479 --> 00:07:23,520
that's all the information we can truly

144
00:07:23,520 --> 00:07:27,639
get uh at this

145
00:07:27,639 --> 00:07:31,039
point so so then let's just see what

146
00:07:31,039 --> 00:07:34,000
happens here next so so this is where we

147
00:07:34,000 --> 00:07:38,800
are kind of actually putting the data uh

148
00:07:38,800 --> 00:07:41,720
in here

149
00:07:42,039 --> 00:07:45,520
and what we can notice is

150
00:07:45,520 --> 00:07:48,240
that we're actually incrementing I

151
00:07:48,240 --> 00:07:50,280
before we're even putting anything there

152
00:07:50,280 --> 00:07:54,520
so so then zero ends up being empty and

153
00:07:54,520 --> 00:07:57,080
then by the time we get to the end we're

154
00:07:57,080 --> 00:08:00,360
going to actually be out of bounds so uh

155
00:08:00,360 --> 00:08:02,120
see hold on let let's let's get that

156
00:08:02,120 --> 00:08:05,800
sorted out uh now let's see if that

157
00:08:05,800 --> 00:08:07,479
actually solved the

158
00:08:07,479 --> 00:08:09,000
issue

159
00:08:09,000 --> 00:08:14,400
or if there are more problems to deal

160
00:08:16,960 --> 00:08:20,400
with it seems like there's

161
00:08:20,400 --> 00:08:24,599
still more

162
00:08:28,440 --> 00:08:30,120
problems

163
00:08:30,120 --> 00:08:31,919
now we're kind of seeing that this is

164
00:08:31,919 --> 00:08:36,039
specifically about like

165
00:08:36,240 --> 00:08:39,560
uh the the

166
00:08:40,719 --> 00:08:43,320
letters something's wrong where with

167
00:08:43,320 --> 00:08:47,279
with the letters here

168
00:08:48,600 --> 00:08:51,600
uh okay let's

169
00:08:51,600 --> 00:08:53,760
uh let's see

170
00:08:53,760 --> 00:08:56,600
so here we're we're

171
00:08:56,600 --> 00:08:59,640
copying uh the shroom that we're getting

172
00:08:59,640 --> 00:09:02,040
from file

173
00:09:02,040 --> 00:09:05,160
IO uh so we can

174
00:09:05,160 --> 00:09:10,079
also look here and uh next

175
00:09:10,880 --> 00:09:13,440
room yeah yeah it's returning a copy of

176
00:09:13,440 --> 00:09:14,760
a

177
00:09:14,760 --> 00:09:18,519
room and putting it

178
00:09:20,360 --> 00:09:25,079
there so then let's see let see what the

179
00:09:25,079 --> 00:09:27,279
copying looks like

180
00:09:27,279 --> 00:09:31,360
here uh

181
00:09:32,279 --> 00:09:33,399
so

182
00:09:33,399 --> 00:09:35,880
then we can notice the letters is

183
00:09:35,880 --> 00:09:38,560
actually it's it's supposed to be uh

184
00:09:38,560 --> 00:09:41,120
like a pointer pointer to an array in

185
00:09:41,120 --> 00:09:42,320
the

186
00:09:42,320 --> 00:09:45,720
Heap so now we're just copying the the

187
00:09:45,720 --> 00:09:47,240
pointer

188
00:09:47,240 --> 00:09:51,680
here so we're copying the pointer

189
00:09:51,680 --> 00:09:56,120
to uh this like local copy that we're

190
00:09:56,120 --> 00:09:57,399
creating

191
00:09:57,399 --> 00:10:01,320
here which then gets uh

192
00:10:01,440 --> 00:10:04,320
destroyed at the end so so then we end

193
00:10:04,320 --> 00:10:06,640
up not having the the

194
00:10:06,640 --> 00:10:09,720
memory anymore so so that's a problem so

195
00:10:09,720 --> 00:10:11,839
so we don't actually we don't actually

196
00:10:11,839 --> 00:10:14,279
want to do that we we want to instead

197
00:10:14,279 --> 00:10:17,399
allocate some new memory and copy the

198
00:10:17,399 --> 00:10:21,399
actual data here

199
00:10:23,680 --> 00:10:27,800
um let's see we can we can kind

200
00:10:28,320 --> 00:10:31,680
of we kind of copy from here if we want

201
00:10:31,680 --> 00:10:33,560
to

202
00:10:33,560 --> 00:10:36,480
um max letter so so max letter should

203
00:10:36,480 --> 00:10:37,440
still

204
00:10:37,440 --> 00:10:41,440
be uh the the

205
00:10:42,320 --> 00:10:44,920
same

206
00:10:44,920 --> 00:10:47,560
um so let's make sure that the previous

207
00:10:47,560 --> 00:10:49,800
data is getting cleared first

208
00:10:49,800 --> 00:10:52,800
so

209
00:10:56,480 --> 00:10:58,800
uh yeah yeah when we're doing this that

210
00:10:58,800 --> 00:11:00,279
then we're

211
00:11:00,279 --> 00:11:04,880
calling uh clear first and then

212
00:11:07,600 --> 00:11:10,760
copying okay so so then uh then it

213
00:11:10,760 --> 00:11:14,079
should be fine and and the where we are

214
00:11:14,079 --> 00:11:15,480
copying

215
00:11:15,480 --> 00:11:17,240
to

216
00:11:17,240 --> 00:11:19,839
uh that that should anyway like be

217
00:11:19,839 --> 00:11:24,639
initialized as as empty so uh okay then

218
00:11:24,639 --> 00:11:26,920
let's just fill fill in the data

219
00:11:26,920 --> 00:11:31,240
here um

220
00:11:35,880 --> 00:11:38,399
letter

221
00:11:54,240 --> 00:11:57,920
count something like this right would

222
00:11:57,920 --> 00:12:01,240
that be good

223
00:12:01,800 --> 00:12:04,360
okay now we're actually getting forward

224
00:12:04,360 --> 00:12:08,160
the only problem we we have anymore some

225
00:12:08,160 --> 00:12:10,880
kind of memory

226
00:12:13,959 --> 00:12:17,320
leak and and when you're running into

227
00:12:17,320 --> 00:12:21,480
into memory leaks then uh of

228
00:12:21,480 --> 00:12:25,120
course first the first step is to look

229
00:12:25,120 --> 00:12:27,320
at the destructors that we

230
00:12:27,320 --> 00:12:31,160
have uh

231
00:12:31,959 --> 00:12:34,720
so let's see

232
00:12:34,720 --> 00:12:38,480
here Destructor

233
00:12:38,480 --> 00:12:41,240
Destructor uh I don't I don't see any

234
00:12:41,240 --> 00:12:43,959
Destructor

235
00:12:47,480 --> 00:12:50,680
here what about the room okay there

236
00:12:50,680 --> 00:12:53,719
there a Destructor for the

237
00:12:53,880 --> 00:12:57,199
room uh yeah yeah the destructor for

238
00:12:57,199 --> 00:12:59,600
this room here is it's calling clear but

239
00:12:59,600 --> 00:13:00,680
for

240
00:13:00,680 --> 00:13:04,719
allocator uh I don't I don't see any

241
00:13:05,600 --> 00:13:09,519
disruptor that would be a b big

242
00:13:09,519 --> 00:13:12,720
problem let's

243
00:13:12,720 --> 00:13:15,399
get let's get to work with with fixing

244
00:13:15,399 --> 00:13:18,440
that so let's first uh Define it in the

245
00:13:18,440 --> 00:13:21,079
in the header

246
00:13:22,880 --> 00:13:26,160
file then uh let's see there's the

247
00:13:26,160 --> 00:13:27,720
Constructor

248
00:13:27,720 --> 00:13:31,120
let's um

249
00:13:31,480 --> 00:13:34,360
let's put the

250
00:13:38,320 --> 00:13:42,399
uh Destructor next to

251
00:13:42,959 --> 00:13:45,279
it okay so what do we need to delete

252
00:13:45,279 --> 00:13:46,800
here well well we need to delete

253
00:13:46,800 --> 00:13:49,920
everything that we are allocating so so

254
00:13:49,920 --> 00:13:53,880
Alpha seems to be uh an

255
00:13:53,880 --> 00:13:56,079
array of of

256
00:13:56,079 --> 00:14:00,240
letters so let's delete it as an

257
00:14:00,240 --> 00:14:03,839
array and then rooms is an array of

258
00:14:03,839 --> 00:14:07,320
rooms so let's

259
00:14:07,320 --> 00:14:10,839
also delete

260
00:14:13,800 --> 00:14:16,720
that okay so it seems like everything

261
00:14:16,720 --> 00:14:18,839
that we're initializing now we should

262
00:14:18,839 --> 00:14:20,240
also be

263
00:14:20,240 --> 00:14:23,880
deleting let's see if that

264
00:14:23,880 --> 00:14:27,160
works yeah that actually fixed all all

265
00:14:27,160 --> 00:14:29,600
of it so we actually

266
00:14:29,600 --> 00:14:31,480
we didn't really have to worry too much

267
00:14:31,480 --> 00:14:33,839
about okay what what is this actually

268
00:14:33,839 --> 00:14:37,320
pointing to in this case we just uh

269
00:14:37,320 --> 00:14:38,600
needed

270
00:14:38,600 --> 00:14:41,480
to needed to look at the destructors and

271
00:14:41,480 --> 00:14:45,320
notice that there wasn't any and then uh

272
00:14:45,320 --> 00:14:49,920
get get that sorted out and uh okay if

273
00:14:49,920 --> 00:14:52,120
we

274
00:14:53,600 --> 00:14:55,480
now

275
00:14:55,480 --> 00:14:57,399
um all

276
00:14:57,399 --> 00:15:01,040
right we can

277
00:15:01,759 --> 00:15:02,480
we

278
00:15:02,480 --> 00:15:05,680
can forward this output

279
00:15:05,680 --> 00:15:08,680
to

280
00:15:08,959 --> 00:15:11,720
there compare the outputs and we'll see

281
00:15:11,720 --> 00:15:14,720
that it matches so so everything's

282
00:15:14,720 --> 00:15:18,000
fine uh okay in this case it should

283
00:15:18,000 --> 00:15:19,360
probably

284
00:15:19,360 --> 00:15:22,079
look uh Your solution should probably

285
00:15:22,079 --> 00:15:23,880
look like pretty much the

286
00:15:23,880 --> 00:15:26,680
same uh as what I did that there's like

287
00:15:26,680 --> 00:15:29,399
some things you could do a a little bit

288
00:15:29,399 --> 00:15:30,880
differently

289
00:15:30,880 --> 00:15:33,639
but

290
00:15:33,639 --> 00:15:36,759
um yeah that this should pretty much be

291
00:15:36,759 --> 00:15:41,480
the the the way you want to want to fix

292
00:15:41,600 --> 00:15:44,600
this

